<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="Project" default="default" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
    <description>Builds, tests, and runs the project Project.</description>
    <import file="nbproject/build-impl.xml"/>
    <property name="src.dir" location="."/>
    <property name="src.java.dir" location="${src.dir}/src"/>
    <property name="src.test.dir" location="${src.dir}/test"/>
 
    <property name="target.dir" location="build"/>
    <property name="target.classes.java.dir" location="${target.dir}/classes"/>
    <property name="target.classes.test.dir" location="${target.dir}/test/classes"/>
 
    <property name="target.report.dir" location="${target.dir}/report"/>
    
    
    <property name="result.dir" location="build/Testing Coverage" />
    <property name="result.classes.dir" location="${result.dir}/classes" />
    <property name="result.report.dir" location="${result.dir}/site/jacoco" />
    <property name="result.exec.file" location="${result.dir}/jacoco.exec" />
    
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="lib/jacocoant.jar" />
    </taskdef>

    <target name="clean">
        <delete dir="${result.dir}" />
    </target>
    
    <target name="compile.java">
        <mkdir dir="${target.classes.java.dir}"/>
        <javac destdir="${target.classes.java.dir}" debug="true">
            <src path="${src.java.dir}"/>
        </javac>
        <jar destfile="./dist/Project.jar" />
    </target>
 
    <target name="compile.test">
        <mkdir dir="${target.classes.test.dir}"/>
        <javac destdir="${target.classes.test.dir}" debug="true" classpath="./dist/Project.jar">
            <src path="${src.test.dir}"/>
        </javac>
    </target>
 
    <target name="compile" depends="compile.java,compile.test"/>
 
    <target name="test" depends="compile">
        <mkdir dir="${target.report.dir}"/>
 
        <junit printsummary="yes" haltonerror="yes" haltonfailure="yes">
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <batchtest todir="${target.report.dir}">
                <fileset dir="${src.test.dir}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Test*All.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <pathelement location="${target.classes.java.dir}"/>
                <pathelement location="${target.classes.test.dir}"/>
            </classpath>
        </junit>
        
        <jacoco:coverage destfile="${result.exec.file}">
            <junit fork="true" printsummary="yes">
                <formatter type="plain" usefile="false"/>
                <formatter type="xml"/>
                <batchtest todir="${target.report.dir}">
                    <fileset dir="${src.test.dir}">
                        <include name="**/*Test.java"/>
                        <exclude name="**/Test*All.java"/>
                    </fileset>
                </batchtest>
                <classpath>
                    <pathelement location="${target.classes.java.dir}"/>
                    <pathelement location="${target.classes.test.dir}"/>
                </classpath>
            </junit>
        </jacoco:coverage>
    </target>
 
    <target name="report" depends="test">
        <mkdir dir="${target.report.dir}/html"/>
        <junitreport todir="${target.report.dir}">
            <fileset dir="${target.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${target.report.dir}/html"/>
        </junitreport>
        
        <jacoco:report>
            <!-- This task needs the collected execution data and ... -->
            <executiondata>
                <file file="${result.exec.file}" />
            </executiondata>

            <!-- the class files and optional source files ... -->
            <structure name="JaCoCo Coverage SIA Models">
                <classfiles>
                    <fileset dir="build/classes" />
                </classfiles>
            
            </structure>

            <!-- to produce reports in different formats. -->
            <html destdir="${result.report.dir}" />
            <csv destfile="${result.report.dir}/report.csv" />
            <xml destfile="${result.report.dir}/report.xml" />
        </jacoco:report>
        
    </target>
    <!--    <target name="build" depends="clean,compile,test,report" />-->
</project>
